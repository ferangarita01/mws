rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users: allow any authenticated user to read profiles (for checking plan limits),
    // but only the user themselves can write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Agreements:
    // - Any authenticated user can create an agreement.
    // - Users can read agreements they created OR if they are listed as a signer.
    // - Only the creator of the agreement can update or delete it.
    match /agreements/{agreementId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.token.email in resource.data.signerEmails);
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Payments: only the owner can read their payment info.
    match /payments/{paymentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if false;
    }
    
    // Subscriptions: only the owner can read their subscription info.
    match /subscriptions/{subscriptionId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if false;
    }

    // Templates: any authenticated user can read templates, but only admins can write them.
    match /templates/{templateId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
