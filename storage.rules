rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Profile photos: Users can read any, but only write their own.
    match /profile-photos/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Agreements PDF: Only the creator or a listed signer can read.
    // The creator (or a server-side process with owner permissions) can write.
    match /agreements-pdf/{agreementId}/{allPaths=**} {
      allow read: if request.auth != null && 
                  (get(/databases/$(database)/documents/agreements/$(agreementId)).data.userId == request.auth.uid ||
                   request.auth.token.email in get(/databases/$(database)/documents/agreements/$(agreementId)).data.signerEmails);
      allow write: if request.auth != null && 
                   request.auth.uid == get(/databases/$(database)/documents/agreements/$(agreementId)).data.userId;
    }
    
    // Templates: Read for any authenticated user, write for admin only.
    match /templates/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}
